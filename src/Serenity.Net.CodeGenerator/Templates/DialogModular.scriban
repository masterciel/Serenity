
@{{SERENITYIMPORT "Decorators"}}.registerClass(){{if CustomSettings.MaximizableDialog}}
@{{SERENITYIMPORT "Decorators"}}.maximizable(){{end}}
export class {{ClassName}}Dialog extends {{SERENITYIMPORT "EntityDialog"}}<{{RowClassName}}, any> {
    protected getFormKey() { return {{SERVERTYPEIMPORT ClassName + "Form"}}.formKey; }{{if Identity}}
    protected getIdProperty() { return {{SERVERTYPEIMPORT RowClassName}}.idProperty; }{{end}}
    protected getLocalTextPrefix() { return {{SERVERTYPEIMPORT RowClassName}}.localTextPrefix; }{{if NameField}}
    protected getNameProperty() { return {{SERVERTYPEIMPORT RowClassName}}.nameProperty; }{{end}}
    protected getService() { return {{SERVERTYPEIMPORT ClassName + "Service"}}.baseUrl; }
    protected getDeletePermission() { return {{SERVERTYPEIMPORT RowClassName}}.deletePermission; }
    protected getInsertPermission() { return {{SERVERTYPEIMPORT RowClassName}}.insertPermission; }
    protected getUpdatePermission() { return {{SERVERTYPEIMPORT RowClassName}}.updatePermission; }

    protected form = new {{ClassName}}Form(this.idPrefix);
{{if CustomSettings.MaximizableDialog}}

    onDialogOpen() {
        super.onDialogOpen();
        this.element.closest(".ui-dialog").find(".ui-icon-maximize-window").click();
    }{{end}}
}
