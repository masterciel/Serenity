<Project>
  <Target Name="ComputeNpmPackageMetadata">
    <ItemGroup>
      <NpmPackageFile>
        <StampFile>$([System.IO.Path]::Combine('%(RootDir)%(Directory)', 'node_modules', '.install-stamp'))</StampFile>
        <WorkingDir>%(RootDir)%(Directory)</WorkingDir>
        <NodeModulesDir>%(RootDir)%(Directory)\node_modules\</NodeModulesDir>
        <CommandPNPM>pnpm install</CommandPNPM>
        <CommandNPM>npm install</CommandNPM>
      </NpmPackageFile>
    </ItemGroup>
  </Target>
  <Target Name="NpmInstall" DependsOnTargets="ComputeNpmPackageMetadata" Inputs="@(NpmPackageFile)" Outputs="%(NpmPackageFile.StampFile)">
    <Exec Command="%(NpmPackageFile.CommandPNPM)" WorkingDirectory="%(WorkingDir)" 
          Condition="Exists('%(NodeModulesDir).pnpm\lock.yaml') Or !Exists('%(NodeModulesDir)')" />
    <Exec Command="%(NpmPackageFile.CommandNPM)" WorkingDirectory="%(WorkingDir)" ContinueOnError="true" 
          Condition="!Exists('%(NodeModulesDir).pnpm\lock.yaml')" />
    <MakeDir Directories="%(NpmPackageFile.NodeModulesDir)" Condition="!Exists('%(NodeModulesDir)')" ContinueOnError="true"></MakeDir>
    <Touch Files="%(NpmPackageFile.StampFile)" AlwaysCreate="true" Condition="Exists('%(NodeModulesDir)')" ContinueOnError="true" />
  </Target>
  <!--<Target Name="NpmCleanStampFile" AfterTargets="Clean" DependsOnTargets="ComputeNpmPackageMetadata">
    <Delete Files="@(NpmPackageFile->'%(StampFile)')" Condition="Exists('%(StampFile)')" />
  </Target>-->
</Project>