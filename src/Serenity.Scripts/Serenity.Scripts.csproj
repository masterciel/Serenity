<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFrameworks>net5.0</TargetFrameworks>
    <TypeScriptExperimentalDecorators>True</TypeScriptExperimentalDecorators>
    <TypeScriptBuildMode>true</TypeScriptBuildMode>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <Title>Serenity Platform - Scripts</Title>
    <Description>Contains Serenity scripts and CSS file</Description>
    <StaticWebAssetBasePath>/Serenity.Scripts</StaticWebAssetBasePath>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="*\tsconfig.json;style\*.css;texts\**\*.json;" />
    <Content Update="package*.json">
      <CopyToOutputDirectory>false</CopyToOutputDirectory>
    </Content>
    <Content Remove="texts\**\*.json" />
    <Content Update="*\tsconfig.json">
      <Pack>false</Pack>
    </Content>
    <None Include="style\*.css">
      <Pack>true</Pack>
      <PackagePath>content\Content\serenity\</PackagePath>
    </None>
    <Content Include="texts\**\*.json">
      <Pack>true</Pack>
      <PackagePath>content\Scripts\serenity\texts\</PackagePath>
    </Content>
    <Content Include="dist\Serenity.CoreLib.js;dist\Serenity.CoreLib.js.map;dist\Serenity.CoreLib.min.js">
      <Pack>true</Pack>
      <PackagePath>content\Scripts\serenity\</PackagePath>
    </Content>
    <Content Include="dist\Serenity.CoreLib.d.ts">
      <Pack>true</Pack>
      <PackagePath>content\Scripts\serenity\;content\Scripts\typings\serenity\;typings\serenity.corelib\index.d.ts</PackagePath>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <None Remove="node_modules\**" />
    <Compile Remove="node_modules\**" />
    <EmbeddedResource Remove="node_modules\**" />
    <TypeScriptCompile Remove="dist\**;node_modules\**;test\**;wwwroot\Serenity.CoreLib.d.ts" />
    <None Include="wwwroot\Serenity.CoreLib.d.ts" />
    <ToCompileCoreLib Include="CoreLib\**\*.ts;CoreLib\tsconfig.json;rollup.config.js"></ToCompileCoreLib>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.1.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <NpmPackageFile Include="$(ProjectDir)package.json" Condition="Exists('$(ProjectDir)package.json')" />
  </ItemGroup>
  <Target Name="ComputeNpmPackageMetadata">
    <ItemGroup>
      <NpmPackageFile>
        <StampFile>$([System.IO.Path]::Combine('%(RootDir)%(Directory)', 'node_modules', '.install-stamp'))</StampFile>
        <WorkingDirectory>%(RootDir)%(Directory)</WorkingDirectory>
        <Command Condition="$(RestorePackagesWithLockFile) != 'true'">npm install</Command>
        <Command Condition="$(RestorePackagesWithLockFile) == 'true'">npm ci</Command>
      </NpmPackageFile>
    </ItemGroup>
  </Target>
  <Target Name="NpmInstall" BeforeTargets="BeforeBuild" DependsOnTargets="ComputeNpmPackageMetadata" Inputs="@(NpmPackageFile)" Outputs="%(NpmPackageFile.StampFile)">
    <Exec Command="@(NpmPackageFile->'%(Command)')" WorkingDirectory="%(WorkingDirectory)" />
    <Touch Files="@(NpmPackageFile->'%(StampFile)')" AlwaysCreate="true" />
  </Target>
  <Target Name="CompileCoreLib" AfterTargets="AfterBuild" Inputs="@(ToCompileCoreLib)" Outputs="dist\Serenity.CoreLib.js;dist\Serenity.CoreLib.d.ts;wwwroot\Serenity.CoreLib.js;wwwroot\Serenity.CoreLib.min.js;wwwroot\Serenity.CoreLib.js.map;wwwroot\Serenity.CoreLib.d.ts">
    <Exec Command="npm run build" />
    <Copy SourceFiles="dist\Serenity.CoreLib.js;dist\Serenity.CoreLib.min.js;dist\Serenity.CoreLib.js.map;dist\Serenity.CoreLib.d.ts" DestinationFolder="wwwroot" />
  </Target>
</Project>