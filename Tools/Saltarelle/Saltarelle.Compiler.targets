<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

	<UsingTask AssemblyFile="..\..\..\packages\Saltarelle.Compiler.2.7.0\tools\SCTask.dll" TaskName="SCTask"/>

	<ItemGroup>
		<IntermediateScript Include="$(IntermediateOutputPath)$(TargetName).js" Condition="'@(IntermediateScript)'==''"/>
	</ItemGroup>

	<Target Name="BuildScript" >
		<PropertyGroup>
			<EmitDebugScript>false</EmitDebugScript>
		</PropertyGroup>
		<PropertyGroup Condition="'$(DebugType)'=='pdbonly' Or '$(DebugType)'=='full'">
			<EmitDebugScript>true</EmitDebugScript>
		</PropertyGroup>
		<PropertyGroup Condition="'$(AlreadyCompiled)'==''">
			<AlreadyCompiled>true</AlreadyCompiled>
		</PropertyGroup>
		
		<SCTask AdditionalLibPaths="$(AdditionalLibPaths)"
		        DefineConstants="$(DefineConstants)"
		        DisabledWarnings="$(NoWarn)"
		        DocumentationFile="@(DocFileItem)"
		        EmitDebugInformation="$(EmitDebugScript)"
		        KeyContainer="$(KeyContainerName)"
		        KeyFile="$(KeyOriginatorFile)"
		        OutputAssembly="@(IntermediateAssembly)"
		        OutputScript="@(IntermediateScript)"
		        References="@(ReferencePath);@(ReferenceDependencyPaths)"
		        Resources="@(EmbeddedResource)"
		        Sources="@(Compile)"
		        TreatWarningsAsErrors="$(TreatWarningsAsErrors)"
		        WarningLevel="$(WarningLevel)"
		        WarningsAsErrors="$(WarningsAsErrors)"
		        WarningsNotAsErrors="$(WarningsNotAsErrors)"
		        MainEntryPoint="$(StartupObject)"
		        TargetType="$(OutputType)"
		        AlreadyCompiled="$(AlreadyCompiled)"
		        />
		        
		<Copy SourceFiles="@(IntermediateScript)"
		      DestinationFolder="$(OutDir)"
		      SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
		      OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
		      Retries="$(CopyRetryCount)"
		      RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
		      UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)"
		      Condition="'$(CopyBuildOutputToOutputDirectory)' == 'true' and '$(SkipCopyBuildProduct)' != 'true'"
		      >
		
			<Output TaskParameter="DestinationFiles" ItemName="MainScript"/>
			<Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
		</Copy>		        
	</Target>

  <PropertyGroup>
    <BuildDependsOn>$(BuildDependsOn);BuildScript</BuildDependsOn>
  </PropertyGroup>
</Project>
