@* Generator: Template *@
@functions { public dynamic Model { get; set; } }@{
    var dotModule = Model.Module == null ? "" : ("." + Model.Module);
    var moduleDot = Model.Module == null ? "" : (Model.Module + ".");
    var moduleSlash = Model.Module == null ? "" : (Model.Module + "/");
}
namespace @(Model.RootNamespace)@(dotModule)
{
    using jQueryApi;
    using Serenity;
    using System.Collections.Generic;

    [IdProperty("@Model.Identity")@if (Model.NameField != null) {<text>, NameProperty("@Model.NameField")</text>}@if (Model.IsActiveField != null) {<text>, IsActiveProperty("@(Model.IsActiveField)")</text>}]
    [FormKey("@(moduleDot)@(Model.ClassName)"), LocalTextPrefix("@(moduleDot)@(Model.ClassName)"), Service("@(moduleSlash)@(Model.ClassName)")]
    public class @(Model.ClassName)Dialog : EntityDialog<@(Model.RowClassName)>
    {
    }
}