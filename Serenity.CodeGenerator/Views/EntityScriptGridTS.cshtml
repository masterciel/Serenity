@* Generator: Template *@
@functions { public dynamic Model { get; set; } }@{
    var dotModule = Model.Module == null ? "" : ("." + Model.Module);
    var moduleDot = Model.Module == null ? "" : (Model.Module + ".");
    var moduleSlash = Model.Module == null ? "" : (Model.Module + "/");
}
namespace @(Model.RootNamespace)@(dotModule) {
    import D = Serenity.Decorators;

    @@D.columnsKey("@(moduleDot)@(Model.ClassName)")@if (Model.Identity != null) {<text> @@D.idProperty(@(Model.RowClassName).idProperty)</text>}@if (Model.NameField != null){<text> @@D.nameProperty(@(Model.RowClassName).nameProperty)</text>}

    @@D.dialogType(@(Model.ClassName)Dialog) @@D.localTextPrefix(@(Model.RowClassName).localTextPrefix) @@D.service(@(Model.ClassName)Service.baseUrl)
    export class @(Model.ClassName)Grid extends Serenity.EntityGrid<@(Model.RowClassName), any> {
        constructor(container: JQuery) {
            super(container);
        }
    }
}