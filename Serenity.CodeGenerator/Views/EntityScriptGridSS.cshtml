@* Generator: Template *@
@functions { public dynamic Model { get; set; } }@{
    var dotModule = Model.Module == null ? "" : ("." + Model.Module);
    var moduleDot = Model.Module == null ? "" : (Model.Module + ".");
    var moduleSlash = Model.Module == null ? "" : (Model.Module + "/");
}
namespace @(Model.RootNamespace)@(dotModule)
{
    using jQueryApi;
    using Serenity;
    using System;
    using System.Collections.Generic;
    using System.Runtime.CompilerServices;

    [ColumnsKey("@(moduleDot)@(Model.ClassName)")@if (Model.Identity != null){<text>, IdProperty(@(Model.RowClassName).IdProperty)</text>}@if (Model.NameField != null){<text>, NameProperty(@(Model.RowClassName).NameProperty)</text>}]
    [DialogType(typeof(@(Model.ClassName)Dialog)), LocalTextPrefix(@(Model.RowClassName).LocalTextPrefix), Service(@(Model.ClassName)Service.BaseUrl)]
    public class @(Model.ClassName)Grid : EntityGrid<@(Model.RowClassName)>
    {
        public @(Model.ClassName)Grid(jQueryObject container)
            : base(container)
        {
        }
    }
}